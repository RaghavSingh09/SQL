CREATE OR ALTER PROCEDURE usp_GetDependency
@vDB_Name SYSNAME,
@vTableName SYSNAME NULL,
@vTableSchema SYSNAME NULL,
@vSPName SYSNAME NULL,
@vViewName SYSNAME NULL
AS
BEGIN
DECLARE @vResultTab AS TABLE (Obj_Type VARCHAR(50),Obj_Name VARCHAR(500),Table_Schema VARCHAR(100),Table_Name VARCHAR(500))
DECLARE @vTableNames AS TABLE (ID INT IDENTITY, TableSchema VARCHAR(100),TableNames SYSNAME)
DECLARE @vObj_Type VARCHAR(50),@vObj_Schema VARCHAR(100),@vObj_Name VARCHAR(500), @_vCnt INT=0, @_vMaxCnt INT=0, @vSqlCommand NVARCHAR(1000)

SET @vDB_Name = RTRIM(LTRIM(@vDB_Name))
IF DB_ID(@vDB_Name) IS NULL 
BEGIN
	PRINT 'Error: Unable to find the database '+ @vDB_Name +'!!!'
	RETURN
END

IF(@vSPName IS NULL AND @vViewName IS NULL)
BEGIN
IF(@vTableName IS NULL OR LEN(@vTableName)<=0)
	INSERT INTO @vTableNames
		EXEC('SELECT TABLE_SCHEMA,TABLE_NAME FROM '+@vDB_Name+'.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = ''BASE TABLE'' AND TABLE_NAME NOT LIKE ''sys%''')
ELSE
	BEGIN
		IF(@vTableSchema IS NULL OR LEN(@vTableSchema)<=0)
		BEGIN
			SET @vSqlCommand = 'SELECT @vTableSchema=SS.NAME FROM '+@vDB_Name+'.SYS.OBJECTS SO INNER JOIN '+@vDB_Name+'.SYS.SCHEMAS SS On SO.SCHEMA_ID = SS.SCHEMA_ID WHERE SO.NAME = '''+@vTableName+''''
			EXECUTE SP_EXECUTESQL @vSqlCommand, N'@vTableSchema NVARCHAR(100) OUTPUT', @vTableSchema = @vTableSchema OUTPUT
		END

		INSERT INTO @vTableNames
			SELECT @vTableSchema,@vTableName
	END
END

SELECT @_vCnt=0, @_vMaxCnt=0
IF((SELECT COUNT(*) FROM @vTableNames)>0)
	BEGIN
		SELECT @_vCnt=MIN(ID), @_vMaxCnt= MAX(ID) FROM @vTableNames
		WHILE(@_vCnt<@_vMaxCnt+1)
		BEGIN
			SELECT @vObj_Schema = TableSchema,@vObj_Name = TableNames FROM @vTableNames WHERE ID=@_vCnt

			--This Process Will Ignore Tables Used Inside Comment Section
			INSERT INTO @vResultTab
			EXEC('
			SELECT CASE WHEN O.TYPE=''P'' THEN ''PROCEDURE'' WHEN O.TYPE=''FN'' THEN ''FUNCTION'' WHEN O.TYPE=''V'' THEN ''VIEW'' WHEN O.TYPE=''TR'' THEN ''TRIGGER'' ELSE O.TYPE END AS Obj_Type,
			TAB.REFERENCING_SCHEMA_NAME+''.''+TAB.REFERENCING_ENTITY_NAME AS Obj_Name,
			'''+@vObj_Schema+''' AS TABLE_SCHEMA, '''+@vObj_Name+''' AS TABLE_NAME FROM
			(
			SELECT REFERENCING_SCHEMA_NAME,REFERENCING_ENTITY_NAME
			FROM ' + @vDB_NAME + '.SYS.DM_SQL_REFERENCING_ENTITIES ('''+@vObj_Schema+'.'+@vObj_Name+''', ''OBJECT'') 
			) TAB
			INNER JOIN ' + @vDB_NAME + '.SYS.OBJECTS O ON O.name = TAB.referencing_entity_name
			INNER JOIN ' + @vDB_NAME + '.SYS.SCHEMAS S ON S.name = TAB.referencing_schema_name')

			SELECT @_vCnt=MIN(ID) FROM @vTableNames WHERE ID>@_vCnt
		END
	END

IF(@vSPName IS NOT NULL)
BEGIN
	INSERT INTO @vResultTab(Obj_Type,Obj_Name,Table_Schema,Table_Name)
	EXEC('SELECT 
	DEP_OBJ.TYPE_DESC AS OBJECT_TYPE,
	SCHEMA_NAME(OBJ.SCHEMA_ID)+''.''+
		   OBJ.NAME AS PROCEDURE_NAME,
		   SCHEMA_NAME(DEP_OBJ.SCHEMA_ID) AS REFERENCED_OBJECT_SCHEMA,
		   DEP_OBJ.NAME AS REFERENCED_OBJECT_NAME
	FROM ' + @vDB_NAME + '.SYS.OBJECTS OBJ
	LEFT JOIN ' + @vDB_NAME + '.SYS.SQL_EXPRESSION_DEPENDENCIES DEP
			  ON DEP.REFERENCING_ID = OBJ.OBJECT_ID
	LEFT JOIN ' + @vDB_NAME + '.SYS.OBJECTS DEP_OBJ
			  ON DEP_OBJ.OBJECT_ID = DEP.REFERENCED_ID
	WHERE OBJ.TYPE IN (''P'', ''X'', ''PC'', ''RF'')
		AND OBJ.NAME = '''+@vSPName +'''
	ORDER BY PROCEDURE_NAME');
END

IF(@vViewName IS NOT NULL)
BEGIN
	INSERT INTO @vResultTab(Obj_Type,Obj_Name,Table_Schema,Table_Name)
	EXEC('
	SELECT DISTINCT 
			O.TYPE_DESC AS ENTITY_TYPE,
			SCHEMA_NAME(V.SCHEMA_ID)+''.''+
			V.NAME AS VIEW_NAME,
			SCHEMA_NAME(O.SCHEMA_ID)AS REFERENCED_ENTITY_SCHEMA,
			O.NAME AS REFERENCED_ENTITY_NAME       
	FROM ' + @vDB_NAME + '.SYS.VIEWS V
	JOIN ' + @vDB_NAME + '.SYS.SQL_EXPRESSION_DEPENDENCIES D
		 ON D.REFERENCING_ID = V.OBJECT_ID
		 AND D.REFERENCED_ID IS NOT NULL
	JOIN ' + @vDB_NAME + '.SYS.OBJECTS O
		 ON O.OBJECT_ID = D.REFERENCED_ID
	WHERE V.NAME = '''+@vViewName+''' -- PUT VIEW NAME HERE
	ORDER BY VIEW_NAME')
END

	SELECT DISTINCT * FROM @vResultTab ORDER BY Obj_Type
END